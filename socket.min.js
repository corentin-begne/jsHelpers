var SocketHelper;!function(){"use strict";SocketHelper=function(e){function t(t){window.io=t,isDefined(e)&&e(n)}var n=this;extendSingleton(SocketHelper),this.token,require(["bower_components/socket.io-1.4.5/index"],t),this.events={auth:{name:"auth.acknowledge",cb:this.connected.bind(this)},connectError:{name:"connect_error",cb:this.connectError.bind(this)},disconnected:{name:"disconnect",cb:this.disconnected.bind(this)}}},SocketHelper.getInstance=function(e){return isDefined(e)?void getSingleton(SocketHelper,e):getSingleton(SocketHelper)},SocketHelper.prototype.init=function(e,t){function n(){isDefined(c._socket)&&c._socket.disconnect()}function o(e,t){c._socket.on(t.name,t.cb)}var c=this;isDefined(t)||(t=this.socket),isDefined(this._socket)&&isDefined(e)&&$.each(e,o),$(window).unbind("beforeunload"),$(window).bind("beforeunload",n)},SocketHelper.prototype.send=function(e,t){t=isDefined(t)?t:{},t.token=this.token,this._socket.emit(e,t)},SocketHelper.prototype.connect=function(e,t,n){console.log("connecting to socket server ..."),this.socket=io("http://"+t+":"+n,{reconnection:!1,autoConnect:!1,query:$.param(e)}),this.init(this.events,this.socket),this.socket.connect()},SocketHelper.prototype.connected=function(e){console.log("connected to socket server",e)},SocketHelper.prototype.disconnected=function(){console.error("disconnected from socket server")},SocketHelper.prototype.connectError=function(){console.error("can't connect to socket server")}}();